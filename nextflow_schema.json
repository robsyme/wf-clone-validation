{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/epi2me-labs/wf-clone-validation/master/nextflow_schema.json",
  "title": "epi2me-labs/wf-clone-validation pipeline parameters",
  "description": "De-novo reconstruction of synthetic plasmid sequences.",
  "type": "object",
  "definitions": {
      "generic_options": {
          "title": "Generic options",
          "type": "object",
          "fa_icon": "fas fa-file-import",
          "description": "Less common options for the pipeline, typically set in a config file.",
          "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
          "properties": {
              "help": {
                  "type": "boolean",
                  "description": "Display help text.",
                  "fa_icon": "fas fa-question-circle",
                  "hidden": true
              },
              "version": {
                  "type": "boolean",
                  "description": "Display version and exit.",
                  "fa_icon": "fas fa-question-circle",
                  "hidden": true
              },
              "monochrome_logs": {
                  "type": "boolean",
                  "description": "Do not use coloured log outputs.",
                  "fa_icon": "fas fa-palette",
                  "hidden": true
              },
              "validate_params": {
                  "type": "boolean",
                  "description": "Boolean whether to validate parameters against the schema at runtime",
                  "default": true,
                  "fa_icon": "fas fa-check-square",
                  "hidden": true
              }
          }
      },
      "input_options": {
          "title": "Input Options",
          "type": "object",
          "description": "Parameters for finding and handling input data for analysis.",
          "default": "",
          "properties": {
              "fastq": {
                  "type": "string",
                  "description": "Directory containing fastq input files. May contain fastq files directly or directories name barcodeXX relating to independent samples",
                  "format": "directory-path",
                  "help_text": "If directories named \"barcode*\" are found under the `--fastq` directory the data is assumed to be multiplex and each barcode directory will be processed independently. If `.fastq(.gz)` files are found under the `--fastq` directory the sample is assumed to not be multiplexed. In this second case `--samples` should be a simple name rather than a CSV file."
              },
              "approx_size": {
                  "type": "integer",
                  "default": 7000,
                  "description": "Approximate plasmid size",
                  "help_text": "Approximate size of the plasmid in base pairs, can also be defined per sample see sample_sheet param."
              },
              "assm_coverage": {
                  "type": "integer",
                  "default": 60,
                  "description": "Fold coverage for use per assembly",
                  "help_text": "This is the coverage that will be used to subsample reads to use for the assembly."
              },
              "primers": {
                  "type": "string",
                  "default": "/workspaces/wf-clone-validation/data/primers.tsv",
                  "description": "File containing primers or null if you want to turn off",
                  "help_text": "Specify one or more primer sets used which will be used to find the sequence inserted in the construct. Should be in .tsv format  [primer_name,  5', 3'] with no header."
              },
              "analyse_unclassified": {
                  "type": "boolean",
                  "help_text": "Analyse unclassified reads from input directory. By default the workflow will not process reads in the unclassified directory.\nIf selected and if the input is a multiplex directory the workflow will also process the unclassified directory.",
                  "description": "Analyse unclassified reads"
              },
              "basecaller_cfg": {
                  "type": "string",
                  "default": "dna_r10.4.1_e8.2_400bps_sup@v4.2.0",
                  "description": "Basecaller model configuration",
                  "help_text": "Name of the model that was used to basecall signal data, used to select an appropriate Medaka model. The basecaller configuration is used to automatically select the appropriate Medaka model. The automatic selection can be overridden with the 'medaka_model' parameter. The model list only shows models that are compatible with this workflow.",
                  "enum": [
                      "dna_r10.4.1_e8.2_400bps_sup@v4.2.0",
                      "dna_r10.4.1_e8.2_400bps_hac@v4.2.0",
                      "dna_r10.4.1_e8.2_260bps_hac@v4.1.0",
                      "dna_r10.4.1_e8.2_260bps_sup@v4.1.0",
                      "dna_r10.4.1_e8.2_400bps_hac@v4.1.0",
                      "dna_r10.4.1_e8.2_400bps_sup@v4.1.0",
                      "dna_r10.4.1_e8.2_260bps_hac@v4.0.0",
                      "dna_r10.4.1_e8.2_260bps_sup@v4.0.0",
                      "dna_r10.4.1_e8.2_400bps_hac@v4.0.0",
                      "dna_r10.4.1_e8.2_400bps_sup@v4.0.0",
                      "dna_r10.4.1_e8.2_400bps_hac@v3.5.2",
                      "dna_r10.4.1_e8.2_400bps_sup@v3.5.2",
                      "dna_r9.4.1_e8_fast@v3.4",
                      "dna_r9.4.1_e8_hac@v3.3",
                      "dna_r9.4.1_e8_sup@v3.3",
                      "dna_r10.4.1_e8.2_400bps_hac_prom",
                      "dna_r9.4.1_450bps_hac_prom",
                      "dna_r10.3_450bps_hac",
                      "dna_r10.3_450bps_hac_prom",
                      "dna_r10.4.1_e8.2_260bps_hac",
                      "dna_r10.4.1_e8.2_260bps_hac_prom",
                      "dna_r10.4.1_e8.2_400bps_hac",
                      "dna_r9.4.1_450bps_hac",
                      "dna_r9.4.1_e8.1_hac",
                      "dna_r9.4.1_e8.1_hac_prom"
                  ]
              }
          },
          "help_text": "",
          "required": [
              "fastq"
          ]
      },
      "reference_genome_options": {
          "title": "Reference Genome Options",
          "type": "object",
          "description": "Reference genome related files and options required for the workflow.",
          "default": "",
          "properties": {
              "insert_reference": {
                  "type": "string",
                  "description": "Optional file containing insert reference sequence which will be used for comparison with consensus insert in the report.",
                  "help_text": "Providing a reference sequence can be useful as a QC on the base-level resolution of the the reconstructed insert sequences.",
                  "format": "file-path"
              },
              "db_directory": {
                  "type": "string",
                  "description": "Optional directory containing a gene annotation database.",
                  "help_text": "A default generic annotation is provided in tar.gz format, containing entries from [fpbase](https://www.fpbase.org/), [Swiss-Prot](https://www.expasy.org/resources/uniprotkb-swiss-prot) , [Rfam](https://rfam.org/) and [snapgene](https://www.snapgene.com/)",
                  "format": "directory-path"
              },
              "host_reference": {
                  "type": "string",
                  "description": "FASTA file, reads which map to it are discarded.",
                  "format": "file-path"
              },
              "regions_bedfile": {
                  "type": "string",
                  "description": "Regions BED file",
                  "help_text": "If a host_reference supplied, add an optional BED file to give provide host reference regions that will be masked during filtering."
              }
          }
      },
      "sample_options": {
          "title": "Sample Options",
          "type": "object",
          "description": "Parameters that relate to samples such as sample sheets and sample names.",
          "default": "",
          "properties": {
              "sample_sheet": {
                  "type": "string",
                  "description": "A CSV file used to map barcodes to sample aliases. The sample sheet can be provided when the input data is a directory containing sub-directories with FASTQ files. An optional column `approx_size` can be added to provide size estimates for each sample. When not provided, the `--approx_size` parameter will be used for all samples.",
                  "help_text": "The sample sheet is a CSV file with, minimally, columns named `barcode` and `alias`. Extra columns are allowed. A `type` column is required for certain workflows and should have the following values; `test_sample`, `positive_control`, `negative_control`, `no_template_control`.",
                  "format": "file-path"
              },
              "sample": {
                  "type": "string",
                  "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files."
              },
              "min_barcode": {
                  "type": "integer",
                  "default": 0,
                  "description": "Minimum numeric sample barcode ID to process.",
                  "help_text": "If multiplexed data is provided, this filter can be used to exclude certain samples from processing."
              },
              "max_barcode": {
                  "type": "integer",
                  "default": 192,
                  "help_text": "If multiplexed data is provided, this filter can be used to exclude certain samples from processing.",
                  "description": "Maximum (inclusive) numeric sample barcode ID to process."
              }
          }
      },
      "output_options": {
          "title": "Output Options",
          "type": "object",
          "description": "Parameters for saving and naming workflow outputs.",
          "default": "",
          "properties": {
              "out_dir": {
                  "type": "string",
                  "default": "output",
                  "description": "Directory for output of all user-facing files.",
                  "format": "directory-path"
              },
              "prefix": {
                  "type": "string",
                  "description": "The prefix attached to each of the output filenames."
              }
          }
      },
      "advanced_options": {
          "title": "Advanced Options",
          "type": "object",
          "description": "",
          "default": "",
          "properties": {
              "trim_length": {
                  "type": "integer",
                  "default": 150,
                  "description": "Number of base pairs to trim from the both ends of read."
              },
              "medaka_model": {
                  "type": "string",
                  "description": "The name of a Medaka model to use. By default the workflow will select an appropriate Medaka model from the basecaller configuration provided. Entering a name here will override the automated selection and use the Medaka model named here.",
                  "help_text": "The workflow will attempt to map the basecalling model used to a suitable Medaka model. You can override this by providing a model with this option instead."
              },
              "flye_quality": {
                  "type": "string",
                  "default": "nano-hq",
                  "description": "The Flye parameter for quality of input reads, default `nano-hq`: high-quality reads, Guppy5+ SUP or Q20 (<5% error).",
                  "help_text": "Other options include `nano-corr`: reads that were corrected with other methods (<3% error), `nano-raw`: pre-Guppy5 (<20% error).",
                  "enum": [
                      "nano-hq",
                      "nano-corr",
                      "nano-raw"
                  ]
              }
          }
      },
      "miscellaneous_options": {
          "title": "Miscellaneous Options",
          "type": "object",
          "description": "Everything else",
          "default": "",
          "properties": {
              "threads": {
                  "type": "integer",
                  "default": 4,
                  "description": "Maximum number of CPU threads to use per workflow task.",
                  "help_text": "Several tasks in this workflow benefit from using multiple CPU threads. This option sets the number of CPU threads for all such processes. The total CPU resource used by the workflow is contrained by the executor configuration."
              },
              "disable_ping": {
                  "type": "boolean",
                  "description": "Enable to prevent sending a workflow ping."
              },
              "show_hidden_params": {
                  "type": "string"
              },
              "schema_ignore_params": {
                  "type": "string",
                  "default": "show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf"
              }
          }
      }
  },
  "allOf": [
      {
          "$ref": "#/definitions/generic_options"
      },
      {
          "$ref": "#/definitions/input_options"
      },
      {
          "$ref": "#/definitions/reference_genome_options"
      },
      {
          "$ref": "#/definitions/sample_options"
      },
      {
          "$ref": "#/definitions/output_options"
      },
      {
          "$ref": "#/definitions/advanced_options"
      },
      {
          "$ref": "#/definitions/miscellaneous_options"
      }
  ]
}